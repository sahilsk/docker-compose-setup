log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent"'
                         'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

##************************
# Docker hostname resolver
#*************************
resolver 127.0.0.11 valid=10s;
resolver_timeout 5s;

upstream backend {
    server webpython:5000 down;
    server webnode:3000;
}
server {
    listen  443 ssl;
	#    server_name example.com my-domain.com;
    
    access_log /var/log/nginx/access.log upstream_time;
    error_log /var/log/nginx/error.log;
    
    #************************************************
    # Use ssl_certificate
    #************************************************
    ssl_certificate      /etc/nginx/certs/domain.crt;
    ssl_certificate_key  /etc/nginx/certs/domain.key;
    
    #************************************************
    #Enable it for client cert based authentication
    #************************************************
    #ssl_client_certificate /etc/nginx/certs/ca.crt;
    #ssl_verify_client on;
    
    include snippets/ssl-params.conf;

    #*********************************************
    #This is to avoid caching during scale-out
    #*********************************************
    set $upstream_endpoint  http://webnode:3000;

    
    location / {
        include snippets/proxy-params.conf;
        resolver 127.0.0.11 valid=10s;

        #proxy_pass http://backend/;
        proxy_pass $upstream_endpoint;

    }

}
